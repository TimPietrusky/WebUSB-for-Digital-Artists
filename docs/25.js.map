{"version":3,"sources":["webpack:///./src/slides/config.js","webpack:///./src/slides/livejs.js","webpack:///./src/components/links.js","webpack:///./src/components/images.js","webpack:///./src/components/dekk.js","webpack:///./src/components/video.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","uuid_v4__WEBPACK_IMPORTED_MODULE_2__","uuid_v4__WEBPACK_IMPORTED_MODULE_2___default","_dekk_speaker_notes__WEBPACK_IMPORTED_MODULE_6__","_dekk_speaker_notes__WEBPACK_IMPORTED_MODULE_6___default","_dekk_master_slides__WEBPACK_IMPORTED_MODULE_7__","_dekk_dekk__WEBPACK_IMPORTED_MODULE_8__","_components_images__WEBPACK_IMPORTED_MODULE_10__","_components_links__WEBPACK_IMPORTED_MODULE_11__","Slide","Main","A","notes","a","createElement","key","uuid","Data","luminave","src","alt","ImportantLink","styled","_templateObject","smallSquare","css","topRight","_templateObject2","zoom2","_templateObject3","_templateObject4","LargeImage","MaskedImage","_templateObject5","_templateObject6","img","_templateObject7","SmallImage","_templateObject8","SmallImageRound","_templateObject9","FitImageBorderLeft","FitImage","_templateObject10","search","parse","window","location","href","present","live","preview","Default","_ref","children","undefined","react_default","Fragment","SuperVideo","_Component","props","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","isPlaying","inherits_default","createClass_default","value","oldProps","video","document","getElementById","play","pause","nextProps","dekk","_dekk_text","dekk_Default","controls","id","preload","Component"],"mappings":"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","file":"25.js","sourcesContent":["export default {}","import Config from './config'\nimport React from 'react'\nimport uuid from 'uuid/v4'\nimport Fragment, {Sequence} from '@dekk/fragment'\nimport {Text, Title, Subtitle, Uppercase, Bold, Center, Code} from '@dekk/text'\nimport {default as MaskedImage, FitImage} from '@dekk/image'\nimport Notes from '@dekk/speaker-notes'\nimport {Main} from '@dekk/master-slides'\nimport {Plugins} from '@dekk/dekk'\nimport {SuperVideo} from '../components/video'\n\nimport { topCenter, SmallImage } from '../components/images'\nimport { ImportantLink } from '../components/links'\nconst {Slide, A} = Main\n\nconst notes = (\n  <Notes>\n    <h3>liveJS</h3>\n    <p>Part of a group of digital artists doing performances with web technology</p>\n    <p>Visuals, Music & light in live shows</p>\n  </Notes>\n)\n\nexport default (\n  <Slide key={uuid()}>\n    <Plugins.Data luminave={['']}></Plugins.Data>\n    {notes}\n\n    <A>\n        <SmallImage \n                src=\"media/livejs-violett_orange.png\"\n                alt=\"LiveJS logo\"\n            />\n          \n          <br />\n        <ImportantLink src=\"https://livejs.network\">livejs.network</ImportantLink>\n    </A>\n\n  </Slide>\n)\n","import React from 'react'\nimport styled, {css} from 'styled-components'\n\nexport const ImportantLink = styled.a`\n  color: var(--theme-on-primary);\n  background: var(--theme-primary);\n  border-radius: 1rem;\n  box-shadow: 0 0 0 1rem var(--theme-primary);\n  line-height: 1.25em;\n  display: inline-block;\n  max-width: 80vw;\n  text-decoration: none;\n\n  :hover {\n      filter: invert(100%);\n  }\n`\n","import React from 'react'\nimport styled, {css} from 'styled-components'\nimport {default as MaskedImage, FitImage} from '@dekk/image'\n\nexport const smallSquare = css`\n  --width: 300px;\n  --height: 300px;\n`\n\nexport const topRight = css`\n  --background-position: top right;\n`\n\nexport const topCenter = css`\n  --background-position: top center;\n`\n\nexport const zoom2 = css`\n  --background-size: 200% auto;\n`\nexport const SquareImage = styled(MaskedImage)`\n  ${smallSquare};\n`\n\nexport const ZoomImage = styled(MaskedImage)`\n  ${zoom2};\n  ${topRight};  \n`\n\nexport const LargeImage = styled.img`\n  height: 90vh;\n`\n\nexport const SmallImage = styled.img`\n  height: 40vh;\n`\n\nexport const SmallImageRound = styled(SmallImage)`\n  border-radius: 50%;\n  border: .5em solid var(--theme-primary);\n`\n\nexport const FitImageBorderLeft = styled(FitImage)`\n  border-left: 10px solid #fff;\n`","import React, {Component} from 'react'\nimport {search} from '@dekk/url'\n\nconst {present, live, preview} = search.parse(window.location.href)\n\nexport const Default = ({children}) => {\n  return (present === undefined && live === undefined && preview === undefined) && <React.Fragment>{children}</React.Fragment>\n}\n  ","import React, {Component, PureComponent} from 'react'\nimport {Live, Present, Preview} from '@dekk/dekk'\nimport {Text, Title, Subtitle, Uppercase, Bold, Center, Code} from '@dekk/text'\nimport {Default} from '../components/dekk'\n\nexport class SuperVideo extends Component {\n  constructor(props) {\n    super(props)\n    this.isPlaying = false\n  }\n\n  componentDidUpdate(oldProps) {\n    const video = document.getElementById('video')\n\n    if (video === null) return\n\n    if (this.props.isPlaying) {\n        video.play()\n        this.isPlaying = true\n    } else {\n        video.pause()\n        this.isPlaying = false\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.isPlaying === this.isPlaying) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Preview>\n          <Title>Video {this.props.isPlaying ? 'playing' : 'paused'}</Title>\n          <br />\n          <Bold>{this.props.src}</Bold>\n        </Preview>\n\n        <Default>\n          <video \n            controls={false}\n            id=\"video\"\n            src={this.props.src}\n            preload=\"auto\"\n          />\n        </Default>\n\n        <Live>\n          <video \n            controls={false}\n            id=\"video\"\n            src={this.props.src}\n            preload=\"auto\"\n          />\n        </Live>\n      </React.Fragment>\n    )\n  }\n}"],"sourceRoot":""}